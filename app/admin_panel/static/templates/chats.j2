{% extends "main.j2" %}
{% block page %}
<div class="h-100 d-flex flex-row">
    <div class="h-100 d-flex flex-column" style="width: 15%; background-color: #ebebeb;">
        <div class="d-flex flex-column list-group list-group-flush border-bottom scrollarea overflow-auto">
            {% for chat in chats %}
            {% set active = 'active' if selected_chat and chat.uid == selected_chat.uid else '' %}
            <a href="{{ url_for('admin_panel_chat', chat_uid=chat.uid) if not selected_chat or chat.uid != selected_chat.uid else '#' }}"
                class="list-group-item list-group-item-action py-3 {{ active }}" aria-current="true">
                Chat {{ chat.uid }}
            </a>
            {% endfor %}
        </div>
    </div>
    {% if selected_chat %}
    <div class="h-100 w-100 d-flex flex-row">
        <div class="d-flex flex-column align-items-flex-start p-3 shadow" style="width:20%">
            <h3 class="align-self-center">Info</h3>
            <p class="mt-3"><span class="fw-medium">First Name:</span> {{ selected_chat.first_name if
                selected_chat.first_name else '-' }}</p>
            <p><span class="fw-medium">Last Name:</span> {{ selected_chat.last_name if selected_chat.last_name else '-'
                }}</p>
            <p><span class="fw-medium">Patronymic Name:</span> {{ selected_chat.patronymic_name if
                selected_chat.patronymic_name else '-' }}</p>
            <p class="mt-3"><span class="fw-medium">Email:</span> {{ selected_chat.email if selected_chat.email else '-'
                }}</p>
            <p><span class="fw-medium">Tel.:</span> {{ selected_chat.phone_number if selected_chat.phone_number else '-'
                }}</p>
        </div>
        <div class="d-flex flex-column h-100 w-100 p-3">
            <h3 class="align-self-center">Chat {{selected_chat.uid}}</h3>
            {# Messages #}
            <div class="d-flex flex-column-reverse flex-1 p-3 overflow-y-auto scrollarea rounded h-100"
                style="border: 1px solid #ccc;">
                {% for msg in messages | reverse %}
                <div
                    class="d-flex mb-3 {% if msg.is_outgoing %}justify-content-end{% else %}justify-content-start{% endif %}">
                    <div class="p-2 px-3 rounded-3 
                                    {% if msg.user %}
                                        bg-primary text-white
                                    {% else %}
                                        bg-light border
                                    {% endif %}" style="max-width: 30%;">
                        {% if msg.user %}
                        <a href="{{ url_for('admin_panel_user', user_uid=msg.user.uid) }}"
                            class="bg-secondary p-1 rounded text-white text-decoration-none">
                            Sender: {{ msg.user.email }}
                        </a>
                        {% endif %}


                        {% if msg.text %}
                        <div class="mb-1">
                            {{ msg.text }}
                        </div>
                        {% endif %}

                        {% for file in msg.files | reverse %}
                        {% if file.mime_type in ["image/jpeg", "image/png"] %}
                        <img src="{{ url_for('admin_panel_download_message_file', file_uid=file.uid) }}" alt="image"
                            class="img-fluid rounded mt-2" style="max-width: 50%;">
                        {% else %}
                        <div class="mt-2">
                            📎 <a href="{{ url_for('admin_panel_download_message_file', file_uid=file.uid) }}"
                                class="text-decoration-underline text-reset" download>{{ file.name }}</a>
                        </div>
                        {% endif %}
                        {% endfor %}
                    </div>
                </div>
                {% endfor %}
            </div>
            {# Messages END #}
            <div class="input-group my-3">
                <button class="btn" type="button" id="file-button">Add file</button>
                <textarea style="resize: none;" class="form-control scrollarea" id="message-input" rows="1"
                    aria-label="With textarea"></textarea>
                <button class="btn" type="button" id="send-button">Send</button>
            </div>
            <input type="file" id="file-input" multiple>
            <div id="file-list" class="scrollarea" style="max-height: 100px;"></div>
            <script>
                document.addEventListener('DOMContentLoaded', () => {
                    const textarea = document.getElementById('message-input');
                    const maxHeight = 150;

                    const fileInput = document.getElementById('file-input');
                    const fileButton = document.getElementById('file-button');
                    const sendButton = document.getElementById('send-button');
                    const fileList = document.getElementById('file-list');
                    let storedFiles = []; // Массив для хранения файлов

                    function resizeTextarea() {
                        textarea.style.height = 'auto';
                        const newHeight = Math.min(textarea.scrollHeight, maxHeight);
                        textarea.style.height = `${newHeight}px`;
                        textarea.style.overflowY = textarea.scrollHeight > maxHeight ? 'auto' : 'hidden';
                    }
                    textarea.addEventListener('input', resizeTextarea);

                    function updateFileList() {
                        fileList.innerHTML = '';
                        storedFiles.forEach((file, index) => {
                            const fileItem = document.createElement('div');
                            fileItem.className = 'file-item';
                            fileItem.innerHTML = `
                        <span>${file.name} (${(file.size / 1024).toFixed(2)} KB)</span>
                        <button class="btn btn-sm btn-outline-danger" data-index="${index}">Delete</button>
                    `;
                            fileList.appendChild(fileItem);
                        });

                        // Обработчики кнопок удаления
                        fileList.querySelectorAll('button').forEach(button => {
                            button.addEventListener('click', () => {
                                const index = parseInt(button.dataset.index);
                                storedFiles.splice(index, 1);
                                updateFileList();
                            });
                        });
                    }
                    // Обработка выбора файлов
                    fileInput.addEventListener('change', () => {
                        const newFiles = Array.from(fileInput.files);
                        if (newFiles.length + storedFiles.length > 10) {
                            alert('Maximum number of files is 10.');
                            return;
                        }
                        storedFiles = [...storedFiles, ...newFiles];
                        updateFileList();
                        fileInput.value = ''; // Очищаем input для повторного выбора
                    });

                    // Активация input file при клике на кнопку "Add file"
                    fileButton.addEventListener('click', () => {
                        fileInput.click();
                    });

                    // Отправка данных
                    sendButton.addEventListener('click', () => {
                        const formData = new FormData();
                        formData.append('csrf_token', '{{ request.state.csrf_token }}');
                        formData.append('text', textarea.value);
                        storedFiles.forEach(file => {
                            formData.append('files', file);
                        });

                        fetch('{{ url_for("admin_panel_send_message", chat_uid=selected_chat.uid) }}', {
                            method: 'POST',
                            body: formData
                        })
                            .then(response => response.json())
                            .then(data => {
                                console.log('Успех:', data);
                                // Очистка после отправки
                                textarea.value = '';
                                storedFiles = [];
                                updateFileList();
                                resizeTextarea();
                            })
                            .catch(error => {
                                console.error('Ошибка:', error);
                            });
                    });
                });
            </script>
        </div>
    </div>
    {% endif %}
</div>
{% endblock %}