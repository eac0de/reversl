{% extends "main.j2" %}
{% block page %}
<!-- Sidebar -->
<div class="d-flex flex-column flex-shrink-0 bg-light border-end" style="width: 15%;">
    <div class="list-group list-group-flush overflow-auto">
        {% for chat in chats %}
        {% set active = 'active' if selected_chat and chat.uid == selected_chat.uid else '' %}
        <a href="{{ url_for('admin_panel_chat', chat_uid=chat.uid) if not active else '#' }}"
            class="list-group-item list-group-item-action {{ active }}">
            Chat {{ chat.uid }}
        </a>
        {% endfor %}
    </div>
</div>

<!-- Chat content -->
{% if selected_chat %}
<div class="flex-grow-1 d-flex">
    <!-- Info panel -->
    <div class="p-3 border-end flex-shrink-0" style="width: 20%;">
        <h5 class="text-center">Info</h5>
        <p><strong>First Name:</strong> {{ selected_chat.first_name or '-' }}</p>
        <p><strong>Last Name:</strong> {{ selected_chat.last_name or '-' }}</p>
        <p><strong>Patronymic Name:</strong> {{ selected_chat.patronymic_name or '-' }}</p>
        <p><strong>Email:</strong> {{ selected_chat.email or '-' }}</p>
        <p><strong>Tel.:</strong> {{ selected_chat.phone_number or '-' }}</p>
    </div>

    <!-- Messages and form -->
    <div class="flex-grow-1 d-flex flex-column p-3">
        <h5 class="text-center mb-3">Chat {{ selected_chat.uid }}</h5>
        <div class="flex-grow-1 overflow-auto p-3 border rounded bg-white d-flex flex-column-reverse scrollarea">
            {% for msg in messages | reverse %}
            <div class="mb-3 d-flex {% if msg.user %}justify-content-end{% else %}justify-content-start{% endif %}">
                <div class="d-flex flex-column p-2 px-3 rounded-3 {% if msg.user %}bg-primary text-white{% else %}bg-light border{% endif %}"
                    style="max-width: 30%;">
                    {% if msg.user %}
                    <a href="{{ url_for('admin_panel_user', user_uid=msg.user.uid) }}"
                        class="bg-secondary p-1 rounded text-white text-decoration-none align-self-center">
                        {{ msg.user.email }}
                    </a>
                    {% endif %}

                    {% if msg.text %}
                    <div class="mb-1 text-break">{{ msg.text }}</div>
                    {% endif %}

                    {% for file in msg.files | reverse %}
                    {% if file.mime_type in ["image/jpeg", "image/png"] %}
                    <img src="{{ url_for('admin_panel_download_message_file', file_uid=file.uid) }}" alt="image"
                        class="img-fluid rounded mt-2" style="max-width: 100%; height: auto;">
                    {% else %}
                    <div class="mt-2">
                        ðŸ“Ž <a href="{{ url_for('admin_panel_download_message_file', file_uid=file.uid) }}"
                            class="text-decoration-underline text-reset" download>{{ file.name }}</a>
                    </div>
                    {% endif %}
                    {% endfor %}
                </div>
            </div>
            {% endfor %}
        </div>

        <!-- Message form -->
        <div class="input-group my-3">
            <button class="btn btn-outline-secondary" type="button" id="file-button">Add file</button>
            <textarea id="message-input" class="form-control" rows="1" style="resize: none;"></textarea>
            <button class="btn btn-primary" type="button" id="send-button">Send</button>
        </div>
        <input type="file" id="file-input" class="d-none" multiple>

        <!-- Bootstrap Modal -->
        <div class="modal fade" id="fileModal" tabindex="-1" aria-labelledby="fileModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title me-auto" id="fileModalLabel">Selected files</h5>

                        <button type="button" class="btn btn-sm btn-outline-primary me-2" id="add-more-files-btn">
                            Add more files
                        </button>

                        <button type="button" class="btn btn-sm btn-outline-danger me-2" id="clear-all-files-btn">
                            Delete all
                        </button>

                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div id="file-list" class="d-flex flex-column gap-2"></div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const fileInput = document.getElementById('file-input');
                const fileButton = document.getElementById('file-button');
                const sendButton = document.getElementById('send-button');
                const fileList = document.getElementById('file-list');
                const fileModal = new bootstrap.Modal(document.getElementById('fileModal'));
                const maxHeight = 150;
                let storedFiles = [];

                const textarea = document.getElementById('message-input');
                function resizeTextarea() {
                    textarea.style.height = 'auto';
                    const newHeight = Math.min(textarea.scrollHeight, maxHeight);
                    textarea.style.height = `${newHeight}px`;
                    textarea.style.overflowY = textarea.scrollHeight > maxHeight ? 'auto' : 'hidden';
                }
                textarea.addEventListener('input', resizeTextarea);

                function updateFileList() {
                    fileList.innerHTML = '';

                    storedFiles.forEach((file, index) => {
                        const fileItem = document.createElement('div');
                        fileItem.className = 'd-flex justify-content-between align-items-center border rounded p-2';

                        const left = document.createElement('div');
                        left.className = 'd-flex align-items-center';

                        if (file.type.startsWith('image/')) {
                            const img = document.createElement('img');
                            img.src = URL.createObjectURL(file);
                            img.className = 'rounded border me-2';
                            img.style.maxWidth = '70px';
                            img.style.maxHeight = '70px';
                            left.appendChild(img);
                        }

                        const name = document.createElement('div');
                        name.textContent = `${file.name} (${(file.size / 1024).toFixed(1)} KB)`;
                        left.appendChild(name);

                        const deleteBtn = document.createElement('button');
                        deleteBtn.className = 'btn btn-sm btn-outline-danger ms-2';
                        deleteBtn.textContent = 'Delete';
                        deleteBtn.addEventListener('click', () => {
                            storedFiles.splice(index, 1);
                            updateFileList();
                            if (storedFiles.length === 0) {
                                fileModal.hide();
                                fileButton.textContent = 'Add files';
                            }
                        });

                        fileItem.appendChild(left);
                        fileItem.appendChild(deleteBtn);
                        fileList.appendChild(fileItem);
                    });

                    fileButton.textContent = storedFiles.length > 0 ? 'View Files' : 'Add files';
                }

                fileInput.addEventListener('change', () => {
                    const newFiles = Array.from(fileInput.files);
                    if (newFiles.length + storedFiles.length > 10) {
                        alert('You can upload a maximum of 10 files.');
                        return;
                    }
                    storedFiles = [...storedFiles, ...newFiles];
                    updateFileList();
                    fileInput.value = '';
                });

                fileButton.addEventListener('click', () => {
                    if (storedFiles.length === 0) {
                        fileInput.click(); // Ð¾Ñ‚ÐºÑ€Ñ‹Ñ‚ÑŒ Ñ„Ð°Ð¹Ð»Ð¾Ð²Ñ‹Ð¹ Ð´Ð¸Ð°Ð»Ð¾Ð³
                    } else {
                        updateFileList();
                        fileModal.show(); // Ð¾Ñ‚ÐºÑ€Ñ‹Ñ‚ÑŒ Ð¼Ð¾Ð´Ð°Ð»ÑŒÐ½Ð¾Ðµ Ð¾ÐºÐ½Ð¾
                    }
                });
                document.getElementById('add-more-files-btn').addEventListener('click', () => {
                    fileInput.click();
                });

                document.getElementById('clear-all-files-btn').addEventListener('click', () => {
                    if (confirm('Delete all selected files?')) {
                        storedFiles = [];
                        updateFileList();
                        fileModal.hide();
                    }
                });

                sendButton.addEventListener('click', () => {
                    const formData = new FormData();
                    formData.append('csrf_token', '{{ request.state.csrf_token }}');
                    formData.append('text', textarea.value);
                    storedFiles.forEach(file => formData.append('files', file));

                    fetch('{{ url_for("admin_panel_send_message", chat_uid=selected_chat.uid) }}', {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.json())
                        .then(() => {
                            textarea.value = '';
                            storedFiles = [];
                            updateFileList();
                            resizeTextarea();
                            fileModal.hide();
                        })
                        .catch(console.error);
                });
            });
        </script>

    </div>
</div>
{% endif %}
{% endblock %}