"""init

Revision ID: 64162c2fd872
Revises:
Create Date: 2025-05-06 20:33:42.120010

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

import app.core.typess

# revision identifiers, used by Alembic.
revision: str = "64162c2fd872"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chats",
        sa.Column(
            "uid", sa.Integer(), autoincrement=True, nullable=False, comment="Chat ID"
        ),
        sa.Column(
            "first_name",
            sa.String(length=64),
            nullable=True,
            comment="Customer first name",
        ),
        sa.Column(
            "last_name",
            sa.String(length=64),
            nullable=True,
            comment="Customer last name",
        ),
        sa.Column(
            "patronymic_name",
            sa.String(length=64),
            nullable=True,
            comment="Chat patronymic name",
        ),
        sa.Column(
            "phone_number",
            sa.String(length=64),
            nullable=True,
            comment="Chat phone number",
        ),
        sa.Column("email", sa.String(length=128), nullable=True, comment="Chat email"),
        sa.Column("rating", sa.SmallInteger(), nullable=False, comment="Chat rating"),
        sa.PrimaryKeyConstraint("uid", name="chats_pkey"),
    )
    op.create_table(
        "users",
        sa.Column(
            "uid", sa.Integer(), autoincrement=True, nullable=False, comment="User ID"
        ),
        sa.Column(
            "first_name", sa.String(length=64), nullable=True, comment="User first name"
        ),
        sa.Column(
            "last_name", sa.String(length=64), nullable=True, comment="User last name"
        ),
        sa.Column(
            "patronymic_name",
            sa.String(length=64),
            nullable=True,
            comment="User patronymic name",
        ),
        sa.Column("email", sa.String(length=128), nullable=False, comment="User email"),
        sa.Column(
            "phone_number",
            sa.String(length=64),
            nullable=True,
            comment="User phone number",
        ),
        sa.Column(
            "password", sa.String(length=64), nullable=False, comment="User password"
        ),
        sa.PrimaryKeyConstraint("uid", name="users_pkey"),
    )
    op.create_table(
        "messages",
        sa.Column(
            "uid",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="Message ID",
        ),
        sa.Column("chat_uid", sa.Integer(), nullable=False, comment="Chat ID"),
        sa.Column(
            "text", sa.String(length=1024), nullable=True, comment="Message text"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            nullable=False,
            comment="Message created at",
        ),
        sa.Column("user_uid", sa.Integer(), nullable=True, comment="User ID"),
        sa.ForeignKeyConstraint(
            ["chat_uid"],
            ["chats.uid"],
            name="messages_chat_uid_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_uid"], ["users.uid"], name="messages_user_uid_fkey"
        ),
        sa.PrimaryKeyConstraint("uid", name="messages_pkey"),
    )
    op.create_table(
        "permissions",
        sa.Column(
            "code",
            sa.Enum(
                "C_USER",
                "R_USER",
                "U_USER",
                "D_USER",
                "C_MESSAGE",
                "R_MESSAGE",
                "U_MESSAGE",
                "D_MESSAGE",
                "R_CHAT",
                "U_CHAT",
                "D_CHAT",
                "R_PERMISSION",
                "U_PERMISSION",
                name="permissioncode",
            ),
            nullable=False,
            comment="Permission code",
        ),
        sa.Column("user_uid", sa.Integer(), nullable=False, comment="User ID"),
        sa.ForeignKeyConstraint(
            ["user_uid"],
            ["users.uid"],
            name="permissions_user_uid_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("code", "user_uid", name="permissions_pkey"),
    )
    op.create_table(
        "message_files",
        sa.Column(
            "uid",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
            comment="Message file ID",
        ),
        sa.Column("name", sa.String(length=256), nullable=False, comment="File name"),
        sa.Column(
            "mime_type", sa.String(length=256), nullable=False, comment="File MIME type"
        ),
        sa.Column(
            "path", app.core.typess.PathType(), nullable=False, comment="File path"
        ),
        sa.Column("message_uid", sa.Integer(), nullable=False, comment="Message ID"),
        sa.ForeignKeyConstraint(
            ["message_uid"],
            ["messages.uid"],
            name="message_files_message_uid_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uid", name="message_files_pkey"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("message_files")
    op.drop_table("permissions")
    op.drop_table("messages")
    op.drop_table("users")
    op.drop_table("chats")
    # ### end Alembic commands ###
